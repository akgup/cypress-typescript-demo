name: PR Cypress Check via Jenkins

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

  workflow_dispatch:  # ðŸ‘ˆ allows manual trigger from GitHub UI

jobs:
  run-cypress-in-jenkins:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Jenkins Job
        id: trigger
        run: |
          # Start Jenkins job
          curl -s -X POST \
            -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" \
            "${{ secrets.JENKINS_URL }}/job/cypress-demo/build" -i

          # Get the last build number
          build_num=$(curl -s -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" \
            "${{ secrets.JENKINS_URL }}/job/cypress-demo/api/json" | jq -r '.lastBuild.number')

          echo "build_num=$build_num" >> $GITHUB_OUTPUT
          echo "build_url=${{ secrets.JENKINS_URL }}/job/cypress-demo/$build_num" >> $GITHUB_OUTPUT

      - name: Wait for Jenkins Job to Finish
        id: wait
        run: |
          build_num="${{ steps.trigger.outputs.build_num }}"
          build_url="${{ steps.trigger.outputs.build_url }}"

          while true; do
            building=$(curl -s -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" \
              "${{ secrets.JENKINS_URL }}/job/cypress-demo/$build_num/api/json" | jq -r '.building')
            result=$(curl -s -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" \
              "${{ secrets.JENKINS_URL }}/job/cypress-demo/$build_num/api/json" | jq -r '.result')

            if [ "$building" = "false" ]; then
              echo "result=$result" >> $GITHUB_OUTPUT
              [ "$result" != "SUCCESS" ] && exit 1
              break
            fi
            sleep 10
          done

      - name: Post Cypress Results to PR
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }} # Use GH_PAT if fork PRs
          script: |
            const prNumber = context.payload.pull_request.number;
            const buildUrl = "${{ steps.trigger.outputs.build_url }}";
            const result = "${{ steps.wait.outputs.result }}";

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `### ðŸ§ª Cypress Test Results\n**Status:** ${result}\n**Jenkins Build:** [View here](${buildUrl})`
            });
